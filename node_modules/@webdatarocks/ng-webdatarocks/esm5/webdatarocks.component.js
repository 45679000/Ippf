/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, ElementRef, Input, Output, EventEmitter } from '@angular/core';
import * as WebDataRocks from '@webdatarocks/webdatarocks';
var WebdatarocksComponent = /** @class */ (function () {
    function WebdatarocksComponent(el) {
        this.el = el;
        // events
        this.cellclick = new EventEmitter();
        this.celldoubleclick = new EventEmitter();
        this.dataerror = new EventEmitter();
        this.datafilecancelled = new EventEmitter();
        this.dataloaded = new EventEmitter();
        this.datachanged = new EventEmitter();
        this.fieldslistclose = new EventEmitter();
        this.fieldslistopen = new EventEmitter();
        this.filteropen = new EventEmitter();
        this.fullscreen = new EventEmitter();
        this.loadingdata = new EventEmitter();
        this.loadinglocalization = new EventEmitter();
        this.loadingreportfile = new EventEmitter();
        this.localizationerror = new EventEmitter();
        this.localizationloaded = new EventEmitter();
        this.openingreportfile = new EventEmitter();
        this.querycomplete = new EventEmitter();
        this.queryerror = new EventEmitter();
        this.ready = new EventEmitter();
        this.reportchange = new EventEmitter();
        this.reportcomplete = new EventEmitter();
        this.reportfilecancelled = new EventEmitter();
        this.reportfileerror = new EventEmitter();
        this.reportfileloaded = new EventEmitter();
        this.runningquery = new EventEmitter();
        this.update = new EventEmitter();
        this.beforetoolbarcreated = new EventEmitter();
        this.aftergriddraw = new EventEmitter();
        this.beforegriddraw = new EventEmitter();
    }
    /**
     * @return {?}
     */
    WebdatarocksComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.root = (/** @type {?} */ (this.el.nativeElement));
        this.webDataRocks = new WebDataRocks({
            container: this.root.getElementsByClassName('wbr-ng-wrapper')[0],
            width: this.width,
            height: this.height,
            toolbar: this.toolbar,
            report: this.report,
            global: this.global,
            customizeCell: this.customizeCell,
            cellclick: function (cell) { return _this.cellclick.next(cell); },
            celldoubleclick: function (cell) { return _this.celldoubleclick.next(cell); },
            dataerror: function (event) { return _this.dataerror.next(event); },
            datafilecancelled: function () { return _this.datafilecancelled.next(); },
            dataloaded: function () { return _this.dataloaded.next(); },
            datachanged: function (event) { return _this.datachanged.next(event); },
            fieldslistclose: function () { return _this.fieldslistclose.next(); },
            fieldslistopen: function () { return _this.fieldslistopen.next(); },
            filteropen: function () { return _this.filteropen.next(); },
            loadingdata: function () { return _this.loadingdata.next(); },
            loadinglocalization: function () { return _this.loadinglocalization.next(); },
            loadingreportfile: function () { return _this.loadingreportfile.next(); },
            localizationerror: function () { return _this.localizationerror.next(); },
            localizationloaded: function () { return _this.localizationloaded.next(); },
            openingreportfile: function () { return _this.openingreportfile.next(); },
            querycomplete: function () { return _this.querycomplete.next(); },
            queryerror: function () { return _this.queryerror.next(); },
            ready: function () { return _this.ready.next(_this.webDataRocks); },
            reportchange: function () { return _this.reportchange.next(); },
            reportcomplete: function () { return _this.reportcomplete.next(); },
            reportfilecancelled: function () { return _this.reportfilecancelled.next(); },
            reportfileerror: function () { return _this.reportfileerror.next(); },
            reportfileloaded: function () { return _this.reportfileloaded.next(); },
            runningquery: function () { return _this.runningquery.next(); },
            update: function () { return _this.update.next(); },
            beforetoolbarcreated: function (toolbar) { return _this.beforetoolbarcreated.next(toolbar); },
            aftergriddraw: function (event) { return _this.aftergriddraw.next(event); },
            beforegriddraw: function (event) { return _this.beforegriddraw.next(event); }
        });
    };
    WebdatarocksComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-wbr-pivot',
                    template: "<div><div class='wbr-ng-wrapper'></div></div>"
                },] },
    ];
    WebdatarocksComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    WebdatarocksComponent.propDecorators = {
        toolbar: [{ type: Input }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        report: [{ type: Input }],
        global: [{ type: Input }],
        customizeCell: [{ type: Input }],
        cellclick: [{ type: Output }],
        celldoubleclick: [{ type: Output }],
        dataerror: [{ type: Output }],
        datafilecancelled: [{ type: Output }],
        dataloaded: [{ type: Output }],
        datachanged: [{ type: Output }],
        fieldslistclose: [{ type: Output }],
        fieldslistopen: [{ type: Output }],
        filteropen: [{ type: Output }],
        fullscreen: [{ type: Output }],
        loadingdata: [{ type: Output }],
        loadinglocalization: [{ type: Output }],
        loadingreportfile: [{ type: Output }],
        localizationerror: [{ type: Output }],
        localizationloaded: [{ type: Output }],
        openingreportfile: [{ type: Output }],
        querycomplete: [{ type: Output }],
        queryerror: [{ type: Output }],
        ready: [{ type: Output }],
        reportchange: [{ type: Output }],
        reportcomplete: [{ type: Output }],
        reportfilecancelled: [{ type: Output }],
        reportfileerror: [{ type: Output }],
        reportfileloaded: [{ type: Output }],
        runningquery: [{ type: Output }],
        update: [{ type: Output }],
        beforetoolbarcreated: [{ type: Output }],
        aftergriddraw: [{ type: Output }],
        beforegriddraw: [{ type: Output }]
    };
    return WebdatarocksComponent;
}());
export { WebdatarocksComponent };
if (false) {
    /** @type {?} */
    WebdatarocksComponent.prototype.toolbar;
    /** @type {?} */
    WebdatarocksComponent.prototype.width;
    /** @type {?} */
    WebdatarocksComponent.prototype.height;
    /** @type {?} */
    WebdatarocksComponent.prototype.report;
    /** @type {?} */
    WebdatarocksComponent.prototype.global;
    /** @type {?} */
    WebdatarocksComponent.prototype.customizeCell;
    /** @type {?} */
    WebdatarocksComponent.prototype.cellclick;
    /** @type {?} */
    WebdatarocksComponent.prototype.celldoubleclick;
    /** @type {?} */
    WebdatarocksComponent.prototype.dataerror;
    /** @type {?} */
    WebdatarocksComponent.prototype.datafilecancelled;
    /** @type {?} */
    WebdatarocksComponent.prototype.dataloaded;
    /** @type {?} */
    WebdatarocksComponent.prototype.datachanged;
    /** @type {?} */
    WebdatarocksComponent.prototype.fieldslistclose;
    /** @type {?} */
    WebdatarocksComponent.prototype.fieldslistopen;
    /** @type {?} */
    WebdatarocksComponent.prototype.filteropen;
    /** @type {?} */
    WebdatarocksComponent.prototype.fullscreen;
    /** @type {?} */
    WebdatarocksComponent.prototype.loadingdata;
    /** @type {?} */
    WebdatarocksComponent.prototype.loadinglocalization;
    /** @type {?} */
    WebdatarocksComponent.prototype.loadingreportfile;
    /** @type {?} */
    WebdatarocksComponent.prototype.localizationerror;
    /** @type {?} */
    WebdatarocksComponent.prototype.localizationloaded;
    /** @type {?} */
    WebdatarocksComponent.prototype.openingreportfile;
    /** @type {?} */
    WebdatarocksComponent.prototype.querycomplete;
    /** @type {?} */
    WebdatarocksComponent.prototype.queryerror;
    /** @type {?} */
    WebdatarocksComponent.prototype.ready;
    /** @type {?} */
    WebdatarocksComponent.prototype.reportchange;
    /** @type {?} */
    WebdatarocksComponent.prototype.reportcomplete;
    /** @type {?} */
    WebdatarocksComponent.prototype.reportfilecancelled;
    /** @type {?} */
    WebdatarocksComponent.prototype.reportfileerror;
    /** @type {?} */
    WebdatarocksComponent.prototype.reportfileloaded;
    /** @type {?} */
    WebdatarocksComponent.prototype.runningquery;
    /** @type {?} */
    WebdatarocksComponent.prototype.update;
    /** @type {?} */
    WebdatarocksComponent.prototype.beforetoolbarcreated;
    /** @type {?} */
    WebdatarocksComponent.prototype.aftergriddraw;
    /** @type {?} */
    WebdatarocksComponent.prototype.beforegriddraw;
    /** @type {?} */
    WebdatarocksComponent.prototype.webDataRocks;
    /** @type {?} */
    WebdatarocksComponent.prototype.root;
    /** @type {?} */
    WebdatarocksComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,