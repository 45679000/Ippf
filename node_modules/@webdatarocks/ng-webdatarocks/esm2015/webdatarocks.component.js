/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Component, ElementRef, Input, Output, EventEmitter } from '@angular/core';
import * as WebDataRocks from '@webdatarocks/webdatarocks';
export class WebdatarocksComponent {
    /**
     * @param {?} el
     */
    constructor(el) {
        this.el = el;
        // events
        this.cellclick = new EventEmitter();
        this.celldoubleclick = new EventEmitter();
        this.dataerror = new EventEmitter();
        this.datafilecancelled = new EventEmitter();
        this.dataloaded = new EventEmitter();
        this.datachanged = new EventEmitter();
        this.fieldslistclose = new EventEmitter();
        this.fieldslistopen = new EventEmitter();
        this.filteropen = new EventEmitter();
        this.fullscreen = new EventEmitter();
        this.loadingdata = new EventEmitter();
        this.loadinglocalization = new EventEmitter();
        this.loadingreportfile = new EventEmitter();
        this.localizationerror = new EventEmitter();
        this.localizationloaded = new EventEmitter();
        this.openingreportfile = new EventEmitter();
        this.querycomplete = new EventEmitter();
        this.queryerror = new EventEmitter();
        this.ready = new EventEmitter();
        this.reportchange = new EventEmitter();
        this.reportcomplete = new EventEmitter();
        this.reportfilecancelled = new EventEmitter();
        this.reportfileerror = new EventEmitter();
        this.reportfileloaded = new EventEmitter();
        this.runningquery = new EventEmitter();
        this.update = new EventEmitter();
        this.beforetoolbarcreated = new EventEmitter();
        this.aftergriddraw = new EventEmitter();
        this.beforegriddraw = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.root = (/** @type {?} */ (this.el.nativeElement));
        this.webDataRocks = new WebDataRocks({
            container: this.root.getElementsByClassName('wbr-ng-wrapper')[0],
            width: this.width,
            height: this.height,
            toolbar: this.toolbar,
            report: this.report,
            global: this.global,
            customizeCell: this.customizeCell,
            cellclick: (cell) => this.cellclick.next(cell),
            celldoubleclick: (cell) => this.celldoubleclick.next(cell),
            dataerror: (event) => this.dataerror.next(event),
            datafilecancelled: () => this.datafilecancelled.next(),
            dataloaded: () => this.dataloaded.next(),
            datachanged: (event) => this.datachanged.next(event),
            fieldslistclose: () => this.fieldslistclose.next(),
            fieldslistopen: () => this.fieldslistopen.next(),
            filteropen: () => this.filteropen.next(),
            loadingdata: () => this.loadingdata.next(),
            loadinglocalization: () => this.loadinglocalization.next(),
            loadingreportfile: () => this.loadingreportfile.next(),
            localizationerror: () => this.localizationerror.next(),
            localizationloaded: () => this.localizationloaded.next(),
            openingreportfile: () => this.openingreportfile.next(),
            querycomplete: () => this.querycomplete.next(),
            queryerror: () => this.queryerror.next(),
            ready: () => this.ready.next(this.webDataRocks),
            reportchange: () => this.reportchange.next(),
            reportcomplete: () => this.reportcomplete.next(),
            reportfilecancelled: () => this.reportfilecancelled.next(),
            reportfileerror: () => this.reportfileerror.next(),
            reportfileloaded: () => this.reportfileloaded.next(),
            runningquery: () => this.runningquery.next(),
            update: () => this.update.next(),
            beforetoolbarcreated: (toolbar) => this.beforetoolbarcreated.next(toolbar),
            aftergriddraw: (event) => this.aftergriddraw.next(event),
            beforegriddraw: (event) => this.beforegriddraw.next(event)
        });
    }
}
WebdatarocksComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-wbr-pivot',
                template: `<div><div class='wbr-ng-wrapper'></div></div>`
            },] },
];
WebdatarocksComponent.ctorParameters = () => [
    { type: ElementRef }
];
WebdatarocksComponent.propDecorators = {
    toolbar: [{ type: Input }],
    width: [{ type: Input }],
    height: [{ type: Input }],
    report: [{ type: Input }],
    global: [{ type: Input }],
    customizeCell: [{ type: Input }],
    cellclick: [{ type: Output }],
    celldoubleclick: [{ type: Output }],
    dataerror: [{ type: Output }],
    datafilecancelled: [{ type: Output }],
    dataloaded: [{ type: Output }],
    datachanged: [{ type: Output }],
    fieldslistclose: [{ type: Output }],
    fieldslistopen: [{ type: Output }],
    filteropen: [{ type: Output }],
    fullscreen: [{ type: Output }],
    loadingdata: [{ type: Output }],
    loadinglocalization: [{ type: Output }],
    loadingreportfile: [{ type: Output }],
    localizationerror: [{ type: Output }],
    localizationloaded: [{ type: Output }],
    openingreportfile: [{ type: Output }],
    querycomplete: [{ type: Output }],
    queryerror: [{ type: Output }],
    ready: [{ type: Output }],
    reportchange: [{ type: Output }],
    reportcomplete: [{ type: Output }],
    reportfilecancelled: [{ type: Output }],
    reportfileerror: [{ type: Output }],
    reportfileloaded: [{ type: Output }],
    runningquery: [{ type: Output }],
    update: [{ type: Output }],
    beforetoolbarcreated: [{ type: Output }],
    aftergriddraw: [{ type: Output }],
    beforegriddraw: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    WebdatarocksComponent.prototype.toolbar;
    /** @type {?} */
    WebdatarocksComponent.prototype.width;
    /** @type {?} */
    WebdatarocksComponent.prototype.height;
    /** @type {?} */
    WebdatarocksComponent.prototype.report;
    /** @type {?} */
    WebdatarocksComponent.prototype.global;
    /** @type {?} */
    WebdatarocksComponent.prototype.customizeCell;
    /** @type {?} */
    WebdatarocksComponent.prototype.cellclick;
    /** @type {?} */
    WebdatarocksComponent.prototype.celldoubleclick;
    /** @type {?} */
    WebdatarocksComponent.prototype.dataerror;
    /** @type {?} */
    WebdatarocksComponent.prototype.datafilecancelled;
    /** @type {?} */
    WebdatarocksComponent.prototype.dataloaded;
    /** @type {?} */
    WebdatarocksComponent.prototype.datachanged;
    /** @type {?} */
    WebdatarocksComponent.prototype.fieldslistclose;
    /** @type {?} */
    WebdatarocksComponent.prototype.fieldslistopen;
    /** @type {?} */
    WebdatarocksComponent.prototype.filteropen;
    /** @type {?} */
    WebdatarocksComponent.prototype.fullscreen;
    /** @type {?} */
    WebdatarocksComponent.prototype.loadingdata;
    /** @type {?} */
    WebdatarocksComponent.prototype.loadinglocalization;
    /** @type {?} */
    WebdatarocksComponent.prototype.loadingreportfile;
    /** @type {?} */
    WebdatarocksComponent.prototype.localizationerror;
    /** @type {?} */
    WebdatarocksComponent.prototype.localizationloaded;
    /** @type {?} */
    WebdatarocksComponent.prototype.openingreportfile;
    /** @type {?} */
    WebdatarocksComponent.prototype.querycomplete;
    /** @type {?} */
    WebdatarocksComponent.prototype.queryerror;
    /** @type {?} */
    WebdatarocksComponent.prototype.ready;
    /** @type {?} */
    WebdatarocksComponent.prototype.reportchange;
    /** @type {?} */
    WebdatarocksComponent.prototype.reportcomplete;
    /** @type {?} */
    WebdatarocksComponent.prototype.reportfilecancelled;
    /** @type {?} */
    WebdatarocksComponent.prototype.reportfileerror;
    /** @type {?} */
    WebdatarocksComponent.prototype.reportfileloaded;
    /** @type {?} */
    WebdatarocksComponent.prototype.runningquery;
    /** @type {?} */
    WebdatarocksComponent.prototype.update;
    /** @type {?} */
    WebdatarocksComponent.prototype.beforetoolbarcreated;
    /** @type {?} */
    WebdatarocksComponent.prototype.aftergriddraw;
    /** @type {?} */
    WebdatarocksComponent.prototype.beforegriddraw;
    /** @type {?} */
    WebdatarocksComponent.prototype.webDataRocks;
    /** @type {?} */
    WebdatarocksComponent.prototype.root;
    /** @type {?} */
    WebdatarocksComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2ViZGF0YXJvY2tzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0B3ZWJkYXRhcm9ja3Mvbmctd2ViZGF0YXJvY2tzLyIsInNvdXJjZXMiOlsid2ViZGF0YXJvY2tzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDM0YsT0FBTyxLQUFLLFlBQVksTUFBTSw0QkFBNEIsQ0FBQztBQUszRCxNQUFNOzs7O0lBMkNGLFlBQW9CLEVBQWM7UUFBZCxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBbkNsQyxTQUFTO1FBQ0MsY0FBUyxHQUF3QyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3BFLG9CQUFlLEdBQXdDLElBQUksWUFBWSxFQUFFLENBQUM7UUFDMUUsY0FBUyxHQUF5QixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3JELHNCQUFpQixHQUF5QixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQzdELGVBQVUsR0FBeUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUN0RCxnQkFBVyxHQUF5QixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3ZELG9CQUFlLEdBQXlCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDM0QsbUJBQWMsR0FBeUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUMxRCxlQUFVLEdBQXlCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDdEQsZUFBVSxHQUF5QixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3RELGdCQUFXLEdBQXlCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDdkQsd0JBQW1CLEdBQXlCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDL0Qsc0JBQWlCLEdBQXlCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDN0Qsc0JBQWlCLEdBQXlCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDN0QsdUJBQWtCLEdBQXlC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eUU7O0lBQ3pFLGtEQUF1RTs7SUFDdkUsa0RBQXVFOztJQUN2RSxtREFBd0U7O0lBQ3hFLGtEQUF1RTs7SUFDdkUsOENBQW1FOztJQUNuRSwyQ0FBZ0U7O0lBQ2hFLHNDQUF1RTs7SUFDdkUsNkNBQWtFOztJQUNsRSwrQ0FBb0U7O0lBQ3BFLG9EQUF5RTs7SUFDekUsZ0RBQXFFOztJQUNyRSxpREFBc0U7O0lBQ3RFLDZDQUFrRTs7SUFDbEUsdUNBQTREOztJQUM1RCxxREFBMEU7O0lBQzFFLDhDQUFtRTs7SUFDbkUsK0NBQW9FOztJQUVwRSw2Q0FBd0M7O0lBRXhDLHFDQUEwQjs7SUFFZCxtQ0FBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCAqIGFzIFdlYkRhdGFSb2NrcyBmcm9tICdAd2ViZGF0YXJvY2tzL3dlYmRhdGFyb2Nrcyc7XHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdhcHAtd2JyLXBpdm90JyxcclxuICAgIHRlbXBsYXRlOiBgPGRpdj48ZGl2IGNsYXNzPSd3YnItbmctd3JhcHBlcic+PC9kaXY+PC9kaXY+YFxyXG59KVxyXG5leHBvcnQgY2xhc3MgV2ViZGF0YXJvY2tzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0e1xyXG4gICAgLy8gcGFyYW1zXHJcbiAgICBASW5wdXQoKSB0b29sYmFyOiBib29sZWFuO1xyXG4gICAgQElucHV0KCkgd2lkdGg6IHN0cmluZyB8IG51bWJlcjtcclxuICAgIEBJbnB1dCgpIGhlaWdodDogc3RyaW5nIHwgbnVtYmVyO1xyXG4gICAgQElucHV0KCkgcmVwb3J0OiBXZWJEYXRhUm9ja3MuUmVwb3J0IHwgc3RyaW5nO1xyXG4gICAgQElucHV0KCkgZ2xvYmFsOiBXZWJEYXRhUm9ja3MuUmVwb3J0O1xyXG4gICAgQElucHV0KCkgY3VzdG9taXplQ2VsbDogKGNlbGw6IFdlYkRhdGFSb2Nrcy5DZWxsQnVpbGRlciwgZGF0YTogV2ViRGF0YVJvY2tzLkNlbGxEYXRhKSA9PiB2b2lkO1xyXG4gICAgLy8gZXZlbnRzXHJcbiAgICBAT3V0cHV0KCkgY2VsbGNsaWNrOiBFdmVudEVtaXR0ZXI8V2ViRGF0YVJvY2tzLkNlbGxEYXRhPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBjZWxsZG91YmxlY2xpY2s6IEV2ZW50RW1pdHRlcjxXZWJEYXRhUm9ja3MuQ2VsbERhdGE+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGRhdGFlcnJvcjogRXZlbnRFbWl0dGVyPG9iamVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgZGF0YWZpbGVjYW5jZWxsZWQ6IEV2ZW50RW1pdHRlcjxvYmplY3Q+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGRhdGFsb2FkZWQ6IEV2ZW50RW1pdHRlcjxvYmplY3Q+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGRhdGFjaGFuZ2VkOiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBmaWVsZHNsaXN0Y2xvc2U6IEV2ZW50RW1pdHRlcjxvYmplY3Q+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGZpZWxkc2xpc3RvcGVuOiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBmaWx0ZXJvcGVuOiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBmdWxsc2NyZWVuOiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBsb2FkaW5nZGF0YTogRXZlbnRFbWl0dGVyPG9iamVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgbG9hZGluZ2xvY2FsaXphdGlvbjogRXZlbnRFbWl0dGVyPG9iamVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgbG9hZGluZ3JlcG9ydGZpbGU6IEV2ZW50RW1pdHRlcjxvYmplY3Q+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGxvY2FsaXphdGlvbmVycm9yOiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBsb2NhbGl6YXRpb25sb2FkZWQ6IEV2ZW50RW1pdHRlcjxvYmplY3Q+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIG9wZW5pbmdyZXBvcnRmaWxlOiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBxdWVyeWNvbXBsZXRlOiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBxdWVyeWVycm9yOiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSByZWFkeTogRXZlbnRFbWl0dGVyPFdlYkRhdGFSb2Nrcy5QaXZvdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgcmVwb3J0Y2hhbmdlOiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSByZXBvcnRjb21wbGV0ZTogRXZlbnRFbWl0dGVyPG9iamVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgcmVwb3J0ZmlsZWNhbmNlbGxlZDogRXZlbnRFbWl0dGVyPG9iamVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgcmVwb3J0ZmlsZWVycm9yOiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSByZXBvcnRmaWxlbG9hZGVkOiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBydW5uaW5ncXVlcnk6IEV2ZW50RW1pdHRlcjxvYmplY3Q+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIHVwZGF0ZTogRXZlbnRFbWl0dGVyPG9iamVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgYmVmb3JldG9vbGJhcmNyZWF0ZWQ6IEV2ZW50RW1pdHRlcjxvYmplY3Q+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGFmdGVyZ3JpZGRyYXc6IEV2ZW50RW1pdHRlcjxvYmplY3Q+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGJlZm9yZWdyaWRkcmF3OiBFdmVudEVtaXR0ZXI8b2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIC8vIGFwaVxyXG4gICAgcHVibGljIHdlYkRhdGFSb2NrczogV2ViRGF0YVJvY2tzLlBpdm90O1xyXG4gICAgLy8gcHJpdmF0ZVxyXG4gICAgcHJpdmF0ZSByb290OiBIVE1MRWxlbWVudDtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmKSB7ICB9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgIHRoaXMucm9vdCA9IHRoaXMuZWwubmF0aXZlRWxlbWVudCBhcyBIVE1MRWxlbWVudDtcclxuICAgICAgdGhpcy53ZWJEYXRhUm9ja3MgPSBuZXcgV2ViRGF0YVJvY2tzKHtcclxuICAgICAgICAgIGNvbnRhaW5lcjogdGhpcy5yb290LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3dici1uZy13cmFwcGVyJylbMF0sXHJcbiAgICAgICAgICB3aWR0aDogdGhpcy53aWR0aCxcclxuICAgICAgICAgIGhlaWdodDogdGhpcy5oZWlnaHQsXHJcbiAgICAgICAgICB0b29sYmFyOiB0aGlzLnRvb2xiYXIsXHJcbiAgICAgICAgICByZXBvcnQ6IHRoaXMucmVwb3J0LFxyXG4gICAgICAgICAgZ2xvYmFsOiB0aGlzLmdsb2JhbCxcclxuICAgICAgICAgIGN1c3RvbWl6ZUNlbGw6IHRoaXMuY3VzdG9taXplQ2VsbCxcclxuICAgICAgICAgIGNlbGxjbGljazogKGNlbGw6IFdlYkRhdGFSb2Nrcy5DZWxsRGF0YSkgPT4gdGhpcy5jZWxsY2xpY2submV4dChjZWxsKSxcclxuICAgICAgICAgIGNlbGxkb3VibGVjbGljazogKGNlbGw6IFdlYkRhdGFSb2Nrcy5DZWxsRGF0YSkgPT4gdGhpcy5jZWxsZG91YmxlY2xpY2submV4dChjZWxsKSxcclxuICAgICAgICAgIGRhdGFlcnJvcjogKGV2ZW50OiBvYmplY3QpID0+IHRoaXMuZGF0YWVycm9yLm5leHQoZXZlbnQpLFxyXG4gICAgICAgICAgZGF0YWZpbGVjYW5jZWxsZWQ6ICgpID0+IHRoaXMuZGF0YWZpbGVjYW5jZWxsZWQubmV4dCgpLFxyXG4gICAgICAgICAgZGF0YWxvYWRlZDogKCkgPT4gdGhpcy5kYXRhbG9hZGVkLm5leHQoKSxcclxuICAgICAgICAgIGRhdGFjaGFuZ2VkOiAoZXZlbnQ6IG9iamVjdCkgPT4gdGhpcy5kYXRhY2hhbmdlZC5uZXh0KGV2ZW50KSxcclxuICAgICAgICAgIGZpZWxkc2xpc3RjbG9zZTogKCkgPT4gdGhpcy5maWVsZHNsaXN0Y2xvc2UubmV4dCgpLFxyXG4gICAgICAgICAgZmllbGRzbGlzdG9wZW46ICgpID0+IHRoaXMuZmllbGRzbGlzdG9wZW4ubmV4dCgpLFxyXG4gICAgICAgICAgZmlsdGVyb3BlbjogKCkgPT4gdGhpcy5maWx0ZXJvcGVuLm5leHQoKSxcclxuICAgICAgICAgIGxvYWRpbmdkYXRhOiAoKSA9PiB0aGlzLmxvYWRpbmdkYXRhLm5leHQoKSxcclxuICAgICAgICAgIGxvYWRpbmdsb2NhbGl6YXRpb246ICgpID0+IHRoaXMubG9hZGluZ2xvY2FsaXphdGlvbi5uZXh0KCksXHJcbiAgICAgICAgICBsb2FkaW5ncmVwb3J0ZmlsZTogKCkgPT4gdGhpcy5sb2FkaW5ncmVwb3J0ZmlsZS5uZXh0KCksXHJcbiAgICAgICAgICBsb2NhbGl6YXRpb25lcnJvcjogKCkgPT4gdGhpcy5sb2NhbGl6YXRpb25lcnJvci5uZXh0KCksXHJcbiAgICAgICAgICBsb2NhbGl6YXRpb25sb2FkZWQ6ICgpID0+IHRoaXMubG9jYWxpemF0aW9ubG9hZGVkLm5leHQoKSxcclxuICAgICAgICAgIG9wZW5pbmdyZXBvcnRmaWxlOiAoKSA9PiB0aGlzLm9wZW5pbmdyZXBvcnRmaWxlLm5leHQoKSxcclxuICAgICAgICAgIHF1ZXJ5Y29tcGxldGU6ICgpID0+IHRoaXMucXVlcnljb21wbGV0ZS5uZXh0KCksXHJcbiAgICAgICAgICBxdWVyeWVycm9yOiAoKSA9PiB0aGlzLnF1ZXJ5ZXJyb3IubmV4dCgpLFxyXG4gICAgICAgICAgcmVhZHk6ICgpID0+IHRoaXMucmVhZHkubmV4dCh0aGlzLndlYkRhdGFSb2NrcyksXHJcbiAgICAgICAgICByZXBvcnRjaGFuZ2U6ICgpID0+IHRoaXMucmVwb3J0Y2hhbmdlLm5leHQoKSxcclxuICAgICAgICAgIHJlcG9ydGNvbXBsZXRlOiAoKSA9PiB0aGlzLnJlcG9ydGNvbXBsZXRlLm5leHQoKSxcclxuICAgICAgICAgIHJlcG9ydGZpbGVjYW5jZWxsZWQ6ICgpID0+IHRoaXMucmVwb3J0ZmlsZWNhbmNlbGxlZC5uZXh0KCksXHJcbiAgICAgICAgICByZXBvcnRmaWxlZXJyb3I6ICgpID0+IHRoaXMucmVwb3J0ZmlsZWVycm9yLm5leHQoKSxcclxuICAgICAgICAgIHJlcG9ydGZpbGVsb2FkZWQ6ICgpID0+IHRoaXMucmVwb3J0ZmlsZWxvYWRlZC5uZXh0KCksXHJcbiAgICAgICAgICBydW5uaW5ncXVlcnk6ICgpID0+IHRoaXMucnVubmluZ3F1ZXJ5Lm5leHQoKSxcclxuICAgICAgICAgIHVwZGF0ZTogKCkgPT4gdGhpcy51cGRhdGUubmV4dCgpLFxyXG4gICAgICAgICAgYmVmb3JldG9vbGJhcmNyZWF0ZWQ6ICh0b29sYmFyOiBvYmplY3QpID0+IHRoaXMuYmVmb3JldG9vbGJhcmNyZWF0ZWQubmV4dCh0b29sYmFyKSxcclxuICAgICAgICAgIGFmdGVyZ3JpZGRyYXc6IChldmVudDogb2JqZWN0KSA9PiB0aGlzLmFmdGVyZ3JpZGRyYXcubmV4dChldmVudCksXHJcbiAgICAgICAgICBiZWZvcmVncmlkZHJhdzogKGV2ZW50OiBvYmplY3QpID0+IHRoaXMuYmVmb3JlZ3JpZGRyYXcubmV4dChldmVudClcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuIl19